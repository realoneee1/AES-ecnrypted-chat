{"ast":null,"code":"var _jsxFileName = \"D:\\\\messebger\\\\EnctyptedAESChat\\\\client\\\\src\\\\contexts\\\\ThemeProvider.js\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport React, { useContext } from 'react';\nimport useLocalStorage from '../hooks/useLocalStorage';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ThemeContext = /*#__PURE__*/React.createContext();\nexport function useTheme() {\n  _s();\n\n  return useContext(ThemeContext);\n}\n\n_s(useTheme, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\n\nexport function ThemeProvider({\n  children\n}) {\n  _s2();\n\n  const [isLightTheme, setTheme] = useLocalStorage('theme', true);\n\n  function toggleTheme() {\n    setTheme(!isLightTheme);\n    if (!isLightTheme === false) document.body.style.backgroundColor = \"#161616\";else document.body.style.backgroundColor = \"#FFFFFF\";\n  }\n\n  return /*#__PURE__*/_jsxDEV(ThemeContext.Provider, {\n    value: {\n      isLightTheme,\n      toggleTheme\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 9\n  }, this);\n}\n\n_s2(ThemeProvider, \"htMAZxButW80BvrF5T//QiYg1So=\", false, function () {\n  return [useLocalStorage];\n});\n\n_c = ThemeProvider;\n\nvar _c;\n\n$RefreshReg$(_c, \"ThemeProvider\");","map":{"version":3,"sources":["D:/messebger/EnctyptedAESChat/client/src/contexts/ThemeProvider.js"],"names":["React","useContext","useLocalStorage","ThemeContext","createContext","useTheme","ThemeProvider","children","isLightTheme","setTheme","toggleTheme","document","body","style","backgroundColor"],"mappings":";;;;AAAA,OAAOA,KAAP,IAAgBC,UAAhB,QAAkC,OAAlC;AACA,OAAOC,eAAP,MAA4B,0BAA5B;;AAEA,MAAMC,YAAY,gBAAGH,KAAK,CAACI,aAAN,EAArB;AAEA,OAAO,SAASC,QAAT,GAAoB;AAAA;;AACvB,SAAOJ,UAAU,CAACE,YAAD,CAAjB;AACH;;GAFeE,Q;;AAIhB,OAAO,SAASC,aAAT,CAAuB;AAAEC,EAAAA;AAAF,CAAvB,EAAqC;AAAA;;AACxC,QAAM,CAACC,YAAD,EAAeC,QAAf,IAA2BP,eAAe,CAAC,OAAD,EAAS,IAAT,CAAhD;;AAEA,WAASQ,WAAT,GAAuB;AACnBD,IAAAA,QAAQ,CAAC,CAACD,YAAF,CAAR;AACA,QAAI,CAACA,YAAD,KAAkB,KAAtB,EAA6BG,QAAQ,CAACC,IAAT,CAAcC,KAAd,CAAoBC,eAApB,GAAsC,SAAtC,CAA7B,KACKH,QAAQ,CAACC,IAAT,CAAcC,KAAd,CAAoBC,eAApB,GAAsC,SAAtC;AACR;;AAGD,sBACI,QAAC,YAAD,CAAc,QAAd;AAAuB,IAAA,KAAK,EAAE;AAAEN,MAAAA,YAAF;AAAgBE,MAAAA;AAAhB,KAA9B;AAAA,cACKH;AADL;AAAA;AAAA;AAAA;AAAA,UADJ;AAKH;;IAfeD,a;UACqBJ,e;;;KADrBI,a","sourcesContent":["import React, { useContext } from 'react'\r\nimport useLocalStorage from '../hooks/useLocalStorage';\r\n\r\nconst ThemeContext = React.createContext()\r\n\r\nexport function useTheme() {\r\n    return useContext(ThemeContext)\r\n}\r\n\r\nexport function ThemeProvider({ children }) {\r\n    const [isLightTheme, setTheme] = useLocalStorage('theme',true)\r\n\r\n    function toggleTheme() {\r\n        setTheme(!isLightTheme);\r\n        if (!isLightTheme === false) document.body.style.backgroundColor = \"#161616\"\r\n        else document.body.style.backgroundColor = \"#FFFFFF\"\r\n    }\r\n\r\n    \r\n    return (\r\n        <ThemeContext.Provider value={{ isLightTheme, toggleTheme }}>\r\n            {children}\r\n        </ThemeContext.Provider>\r\n    )\r\n}\r\n"]},"metadata":{},"sourceType":"module"}