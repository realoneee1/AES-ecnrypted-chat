{"ast":null,"code":"var _jsxFileName = \"D:\\\\messebger\\\\EnctyptedAESChat\\\\client\\\\src\\\\components\\\\Navbar.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { Dropdown, DropdownButton, Form, Navbar } from \"react-bootstrap\";\nimport logo from \"../assets/images/logo.svg\";\nimport userLight from \"../assets/images/user-light.svg\";\nimport userDark from \"../assets/images/user-dark.svg\";\nimport logoutLight from \"../assets/images/logoutLight.svg\";\nimport light from \"../assets/images/LightMode.svg\";\nimport dark from \"../assets/images/DarkMode.svg\";\nimport { useTheme } from \"../contexts/ThemeProvider\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Nav({\n  login,\n  name,\n  logout\n}) {\n  _s();\n\n  const {\n    isLightTheme,\n    toggleTheme\n  } = useTheme();\n  const [language, setLanguage] = useState('en');\n  useEffect(() => {\n    setLanguage(localStorage.getItem('lang'));\n  }, []);\n\n  const exitChatApp = () => logout(false);\n\n  const LoginBox = /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"img\", {\n      alt: \"\",\n      src: isLightTheme ? userLight : userDark,\n      width: \"40\",\n      height: \"40\",\n      className: \"m-2 d-inline-block align-top\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this), \" \", /*#__PURE__*/_jsxDEV(DropdownButton, {\n      variant: isLightTheme ? \"light\" : \"dark\",\n      drop: \"down\",\n      id: \"dropdown-basic-button\",\n      title: name,\n      children: /*#__PURE__*/_jsxDEV(Dropdown.Item, {\n        variant: isLightTheme ? \"light\" : \"dark\",\n        onClick: exitChatApp,\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          alt: \"\",\n          src: logoutLight,\n          width: \"17\",\n          height: \"17\",\n          className: \"m-1 d-inline-block align-top\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 11\n        }, this), \" \", \"Logout\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 5\n  }, this);\n\n  const [selectedOption, setSelectedOption] = useState(\"\");\n  useEffect(() => {\n    setSelectedOption(localStorage.getItem('lang'));\n  }, []);\n\n  const handleSelect = event => {\n    localStorage.setItem('lang', event.target.value);\n    setSelectedOption(event.target.value);\n    window.location.reload();\n  };\n\n  return /*#__PURE__*/_jsxDEV(Navbar, {\n    className: isLightTheme ? \"\" : \"bag-dark\",\n    children: [/*#__PURE__*/_jsxDEV(Form, {\n      inline: true,\n      className: \"justify-content-end\",\n      children: [login ? LoginBox : null, /*#__PURE__*/_jsxDEV(\"img\", {\n        alt: \"\",\n        src: isLightTheme ? dark : light,\n        width: \"50\",\n        height: \"50\",\n        className: \"d-inline-block align-top logoDark\",\n        onClick: toggleTheme\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n      value: selectedOption,\n      onChange: handleSelect,\n      children: [/*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"en\",\n        children: \"English\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"ua\",\n        children: \"\\u0423\\u043A\\u0440\\u0430\\u0457\\u043D\\u0441\\u044C\\u043A\\u0430\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 67,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Nav, \"7VCf62OR5EHhmImubNsSt0xB8vw=\", false, function () {\n  return [useTheme];\n});\n\n_c = Nav;\n\nvar _c;\n\n$RefreshReg$(_c, \"Nav\");","map":{"version":3,"sources":["D:/messebger/EnctyptedAESChat/client/src/components/Navbar.js"],"names":["React","useEffect","useState","Dropdown","DropdownButton","Form","Navbar","useTheme","Nav","login","name","logout","isLightTheme","toggleTheme","language","setLanguage","localStorage","getItem","exitChatApp","LoginBox","userLight","userDark","logoutLight","selectedOption","setSelectedOption","handleSelect","event","setItem","target","value","window","location","reload","dark","light"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { Dropdown, DropdownButton, Form, Navbar } from \"react-bootstrap\";\r\n\r\nimport logo from \"../assets/images/logo.svg\";\r\nimport userLight from \"../assets/images/user-light.svg\";\r\nimport userDark from \"../assets/images/user-dark.svg\";\r\nimport logoutLight from \"../assets/images/logoutLight.svg\";\r\nimport light from \"../assets/images/LightMode.svg\";\r\nimport dark from \"../assets/images/DarkMode.svg\";\r\n\r\nimport { useTheme } from \"../contexts/ThemeProvider\";\r\n\r\nexport default function Nav({ login, name, logout }) {\r\n  const { isLightTheme, toggleTheme } = useTheme();\r\n  const [language, setLanguage] = useState('en')\r\n\r\n    useEffect(() => {\r\n        setLanguage(localStorage.getItem('lang'));\r\n      }, []);\r\n    \r\n  const exitChatApp = () => logout(false);\r\n\r\n  const LoginBox = (\r\n    <React.Fragment>\r\n      <img\r\n        alt=\"\"\r\n        src={isLightTheme ? userLight : userDark}\r\n        width=\"40\"\r\n        height=\"40\"\r\n        className=\"m-2 d-inline-block align-top\"\r\n      />{\" \"}\r\n      <DropdownButton\r\n        variant={isLightTheme ? \"light\" : \"dark\"}\r\n        drop=\"down\"\r\n        id=\"dropdown-basic-button\"\r\n        title={name}\r\n      >\r\n        <Dropdown.Item\r\n          variant={isLightTheme ? \"light\" : \"dark\"}\r\n          onClick={exitChatApp}\r\n        >\r\n          <img\r\n            alt=\"\"\r\n            src={logoutLight}\r\n            width=\"17\"\r\n            height=\"17\"\r\n            className=\"m-1 d-inline-block align-top\"\r\n          />{\" \"}\r\n          Logout\r\n        </Dropdown.Item>\r\n      </DropdownButton>\r\n    </React.Fragment>\r\n  );\r\n  const [selectedOption, setSelectedOption] = useState(\"\");\r\n\r\n  useEffect(()=>{\r\n    setSelectedOption(localStorage.getItem('lang'))\r\n  },[])\r\n\r\n  const handleSelect = (event) => {\r\n    localStorage.setItem('lang', event.target.value)\r\n    setSelectedOption(event.target.value);\r\n    window.location.reload()\r\n  };\r\n\r\n  return (\r\n    <Navbar className={isLightTheme ? \"\" : \"bag-dark\"}>      \r\n      <Form inline className=\"justify-content-end\">\r\n        {login ? LoginBox : null}\r\n        <img\r\n          alt=\"\"\r\n          src={isLightTheme ? dark : light}\r\n          width=\"50\"\r\n          height=\"50\"\r\n          className=\"d-inline-block align-top logoDark\"\r\n          onClick={toggleTheme}\r\n        />\r\n      </Form>\r\n      <select  value={selectedOption} onChange={handleSelect}>\r\n        <option value=\"en\">English</option>\r\n        <option value=\"ua\">Українська</option>\r\n      </select>\r\n    </Navbar>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}