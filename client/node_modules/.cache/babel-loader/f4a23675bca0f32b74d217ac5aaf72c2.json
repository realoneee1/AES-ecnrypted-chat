{"ast":null,"code":"var _jsxFileName = \"D:\\\\messebger\\\\EnctyptedAESChat\\\\client\\\\src\\\\components\\\\NewContactModal.js\",\n    _s = $RefreshSig$();\n\nimport React, { useRef, useEffect, useState } from 'react';\nimport { Modal, Form, Button } from 'react-bootstrap';\nimport { useContacts } from '../contexts/ContactsProvider';\nimport { useTheme } from '../contexts/ThemeProvider';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function NewContactModal({\n  closeModal\n}) {\n  _s();\n\n  const {\n    isLightTheme\n  } = useTheme();\n  const idRef = useRef();\n  const nameRef = useRef();\n  const {\n    createContact\n  } = useContacts();\n  const [language, setLanguage] = useState('en');\n  useEffect(() => {\n    setLanguage(localStorage.getItem('lang'));\n  }, []);\n\n  function handleSubmit(e) {\n    e.preventDefault();\n    createContact(idRef.current.value, nameRef.current.value);\n    closeModal();\n  }\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Modal.Header, {\n      className: isLightTheme ? \"bag-light\" : \"bag-dark\",\n      closeButton: true,\n      children: language === 'ua' ? 'Створити контакт' : 'Create Contact'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Modal.Body, {\n      className: isLightTheme ? \"bag-light\" : \"bag-dark\",\n      children: /*#__PURE__*/_jsxDEV(Form, {\n        onSubmit: handleSubmit,\n        children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            children: \"Id\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 31,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n            type: \"text\",\n            ref: idRef,\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 32,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            children: language === 'ua' ? 'І\\'мя' : 'Create Contact'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 35,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n            type: \"text\",\n            ref: nameRef,\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 36,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          type: \"submit\",\n          children: \"Create\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n}\n\n_s(NewContactModal, \"/Ww2UJhgah/GJ+D6ouBVVlskv/s=\", false, function () {\n  return [useTheme, useContacts];\n});\n\n_c = NewContactModal;\n\nvar _c;\n\n$RefreshReg$(_c, \"NewContactModal\");","map":{"version":3,"sources":["D:/messebger/EnctyptedAESChat/client/src/components/NewContactModal.js"],"names":["React","useRef","useEffect","useState","Modal","Form","Button","useContacts","useTheme","NewContactModal","closeModal","isLightTheme","idRef","nameRef","createContact","language","setLanguage","localStorage","getItem","handleSubmit","e","preventDefault","current","value"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,MAAhB,EAAwBC,SAAxB,EAAmCC,QAAnC,QAAmD,OAAnD;AACA,SAASC,KAAT,EAAgBC,IAAhB,EAAsBC,MAAtB,QAAoC,iBAApC;AACA,SAASC,WAAT,QAA4B,8BAA5B;AAEA,SAASC,QAAT,QAAyB,2BAAzB;;;AAEA,eAAe,SAASC,eAAT,CAAyB;AAAEC,EAAAA;AAAF,CAAzB,EAAyC;AAAA;;AACpD,QAAM;AAAEC,IAAAA;AAAF,MAAmBH,QAAQ,EAAjC;AACA,QAAMI,KAAK,GAAGX,MAAM,EAApB;AACA,QAAMY,OAAO,GAAGZ,MAAM,EAAtB;AACA,QAAM;AAAEa,IAAAA;AAAF,MAAoBP,WAAW,EAArC;AACA,QAAM,CAACQ,QAAD,EAAWC,WAAX,IAA0Bb,QAAQ,CAAC,IAAD,CAAxC;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACZc,IAAAA,WAAW,CAACC,YAAY,CAACC,OAAb,CAAqB,MAArB,CAAD,CAAX;AACD,GAFM,EAEJ,EAFI,CAAT;;AAGA,WAASC,YAAT,CAAsBC,CAAtB,EAAyB;AACrBA,IAAAA,CAAC,CAACC,cAAF;AAEAP,IAAAA,aAAa,CAACF,KAAK,CAACU,OAAN,CAAcC,KAAf,EAAsBV,OAAO,CAACS,OAAR,CAAgBC,KAAtC,CAAb;AACAb,IAAAA,UAAU;AACb;;AAGD,sBACI;AAAA,4BACI,QAAC,KAAD,CAAO,MAAP;AAAc,MAAA,SAAS,EAAEC,YAAY,GAAG,WAAH,GAAiB,UAAtD;AAAkE,MAAA,WAAW,MAA7E;AAAA,gBAA+EI,QAAQ,KAAK,IAAb,GAAoB,kBAApB,GAAyC;AAAxH;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI,QAAC,KAAD,CAAO,IAAP;AAAY,MAAA,SAAS,EAAEJ,YAAY,GAAG,WAAH,GAAiB,UAApD;AAAA,6BACI,QAAC,IAAD;AAAM,QAAA,QAAQ,EAAEQ,YAAhB;AAAA,gCACI,QAAC,IAAD,CAAM,KAAN;AAAA,kCACI,QAAC,IAAD,CAAM,KAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADJ,eAEI,QAAC,IAAD,CAAM,OAAN;AAAc,YAAA,IAAI,EAAC,MAAnB;AAA0B,YAAA,GAAG,EAAEP,KAA/B;AAAsC,YAAA,QAAQ;AAA9C;AAAA;AAAA;AAAA;AAAA,kBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,eAKI,QAAC,IAAD,CAAM,KAAN;AAAA,kCACI,QAAC,IAAD,CAAM,KAAN;AAAA,sBAAaG,QAAQ,KAAK,IAAb,GAAoB,OAApB,GAA8B;AAA3C;AAAA;AAAA;AAAA;AAAA,kBADJ,eAEI,QAAC,IAAD,CAAM,OAAN;AAAc,YAAA,IAAI,EAAC,MAAnB;AAA0B,YAAA,GAAG,EAAEF,OAA/B;AAAwC,YAAA,QAAQ;AAAhD;AAAA;AAAA;AAAA;AAAA,kBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,gBALJ,eASI,QAAC,MAAD;AAAQ,UAAA,IAAI,EAAC,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBATJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YAFJ;AAAA,kBADJ;AAkBH;;GApCuBJ,e;UACKD,Q,EAGCD,W;;;KAJNE,e","sourcesContent":["import React, { useRef, useEffect, useState } from 'react'\r\nimport { Modal, Form, Button } from 'react-bootstrap'\r\nimport { useContacts } from '../contexts/ContactsProvider'\r\n\r\nimport { useTheme } from '../contexts/ThemeProvider'\r\n\r\nexport default function NewContactModal({ closeModal }) {\r\n    const { isLightTheme } = useTheme()\r\n    const idRef = useRef()\r\n    const nameRef = useRef()\r\n    const { createContact } = useContacts()\r\n    const [language, setLanguage] = useState('en')\r\n\r\n    useEffect(() => {\r\n        setLanguage(localStorage.getItem('lang'));\r\n      }, []);\r\n    function handleSubmit(e) {\r\n        e.preventDefault()\r\n\r\n        createContact(idRef.current.value, nameRef.current.value)\r\n        closeModal()\r\n    }\r\n\r\n    \r\n    return (\r\n        <>\r\n            <Modal.Header className={isLightTheme ? \"bag-light\" : \"bag-dark\"} closeButton>{language === 'ua' ? 'Створити контакт' : 'Create Contact'}</Modal.Header>\r\n            <Modal.Body className={isLightTheme ? \"bag-light\" : \"bag-dark\"}>\r\n                <Form onSubmit={handleSubmit}>\r\n                    <Form.Group>\r\n                        <Form.Label>Id</Form.Label>\r\n                        <Form.Control type=\"text\" ref={idRef} required />\r\n                    </Form.Group>\r\n                    <Form.Group>\r\n                        <Form.Label>{language === 'ua' ? 'І\\'мя' : 'Create Contact'}</Form.Label>\r\n                        <Form.Control type=\"text\" ref={nameRef} required />\r\n                    </Form.Group>\r\n                    <Button type=\"submit\">Create</Button>\r\n                </Form>\r\n            </Modal.Body>\r\n        </>\r\n    )\r\n}\r\n"]},"metadata":{},"sourceType":"module"}